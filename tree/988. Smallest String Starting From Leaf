/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    string ans;
    string smallestFromLeaf(TreeNode* root) {
        find(root, "");
        return ans;
    }
    
    void find(TreeNode * root, string s)
    {
        if(!root) {
           return ;
        }
          s += 'a' + root->val;
        if(!root->left && !root->right)
        {
             reverse(s.begin(), s.end());
            if(ans == "") ans = s; 
            else
            ans = min(ans, s);
            return ;
        }
        find(root->left, s);
        find(root->right, s);
        
    }
};
